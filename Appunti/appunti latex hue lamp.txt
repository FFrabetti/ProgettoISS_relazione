L'interazione con la Hue Lamp Philips avviene mediante un'interfaccia di API RESTful fornita dall'apposito bridge. (nota con link alla documentazione?)
RESTful è un paradigma di comunicazione basato su messaggi HTTP di 4 tipi fondamentali: POST, GET, PUT, DELETE. Questi significano rispettivamente: crea, leggi, modifica, cancella una risorsa remota. Inoltre i dati inviati e ricevuti sono spesso forniti in un linguaggio di rappresentazione standard, in questo caso JSON.
Prima di interagire con la lampada, è quindi necessario individuare il router nella rete ed ottenere uno username. Sempre grazie alla documentazione, apprendiamo che entrambe le operazioni possono essere facilmente svolte con messaggi HTTP, la prima attraverso una chiamata GET ad un preciso url (nota?) , mentre la seconda grazie alle API del router individuato con la prima.
Attualmente il nostro sistema simulava la lampada wi-fi con un oggetto mock scritto in Java; viene quindi facile sostituirlo mediante un'altra classe Java che funga da adapter per le API del sistema Hue Lamp Philips. (file hueLampAdapter.java) Tale classe espone i due metodi statici setUp() e setLamp(String state): il primo esegue le operazioni per stabilire una connessione col bridge ed ottenere le credenziali, mentre il secondo è un metodo adapter per chiamare le API che permettono di cambiare lo stato della lampadina (on/off).
Dal momento che sia l'interazione con la lampada, sia le operazioni preliminari per individuare l'indirizzo ip del router nella rete e per l'ottenimento dello username sono gestite attraverso comunicazione RESTful, abbiamo implementato una classe Java di utilità che, sfruttando un'apposita libreria (org.apache.httpClient e org.apache.httpCore), semplifichi tali operazioni. (file RESTfulClient.java)
Per quanto riguarda la scrittura/lettura dei dati in JSON, ci siamo appoggiati alla libreria (json-28ecc.).