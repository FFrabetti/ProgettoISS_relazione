/* Generated by AN DISI Unibo */ 
package it.unibo.ctxApplPA;
import alice.tuprolog.Term;
import it.unibo.contactEvent.interfaces.IEventItem;
import it.unibo.qactors.platform.EventHandlerComponent;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;
import it.unibo.qactors.QActorUtils;

public abstract class AbstractEvled extends EventHandlerComponent { 
protected IEventItem event;
	public AbstractEvled(String name, QActorContext myCtx, IOutputEnvView outEnvView, String[] eventIds ) throws Exception {
		super(name, myCtx, eventIds, outEnvView);
  	}
	@Override
	public void doJob() throws Exception {	}
	
	public void handleCurrentEvent() throws Exception {
		event = this.currentEvent; //AKKA getEventItem();
		if( event == null ) return;
		//RaiseOtherEvent
		{String newcontent = "lightCmd(blink)";
		newcontent =  updateVars( Term.createTerm("ctrlEvent(led,l1,blink)"), 
			                Term.createTerm("ctrlEvent(led,l1,blink)"), 
			                Term.createTerm( event.getMsg() ), newcontent);
		//println("newcontent="+newcontent);
		if( newcontent != null ){ emit( "lightCmd", newcontent ); }
		}
		//RaiseOtherEvent
		{String newcontent = "lightCmd(on)";
		newcontent =  updateVars( Term.createTerm("ctrlEvent(led,l1,on)"), 
			                Term.createTerm("ctrlEvent(led,l1,on)"), 
			                Term.createTerm( event.getMsg() ), newcontent);
		//println("newcontent="+newcontent);
		if( newcontent != null ){ emit( "lightCmd", newcontent ); }
		}
		//RaiseOtherEvent
		{String newcontent = "lightCmd(off)";
		newcontent =  updateVars( Term.createTerm("ctrlEvent(led,l1,off)"), 
			                Term.createTerm("ctrlEvent(led,l1,off)"), 
			                Term.createTerm( event.getMsg() ), newcontent);
		//println("newcontent="+newcontent);
		if( newcontent != null ){ emit( "lightCmd", newcontent ); }
		}
	}//handleCurrentEvent
	
	@Override
	protected void handleQActorEvent(IEventItem ev) {
		super.handleQActorEvent(ev);
 		try {
			handleCurrentEvent();
		} catch (Exception e) {
 			e.printStackTrace();
		}
	}//handleQActorEvent
	
}
