System raintegrator

Event clock : clock(H,M)				// H = ore ([0-23]), M = minuti ([0-59])
Event temperature : temperature(T)		// T = temperatura in celsius (float)
Event frontSonar : sonar(DISTANCE)		// DISTANCE = distanza dell'ostacolo (int)
Event sonarSensor : sonar(NAME,DISTANCE)	// NAME = sonar1 | sonar2
Event lightCmd : lightCmd(CMD)			// CMD = on | off | blink
Event robotCmd : moveRobot(CMD)			// CMD = C(X), C = w|a|s|d|h, X = velocita'
Dispatch cmd : cmd(CMD)

Context ctxRaIntegrator ip [ host="localhost" port=8880 ]

Context ctxDdr ip [ host="localhost" port=8882 ] -standalone 
Context ctxReqAnalysis ip [ host="localhost" port=8888 ] -standalone 

QActor raintegratorqa context ctxRaIntegrator {
	Plan init normal [
		println("raIntegrator start")
	]
//	switchTo testSendCmd

	// for manual testing
	Plan testSendCmd [
		println("raIntegrator sending cmd : cmd(s(3)) to applra");
		sendto applra in ctxReqAnalysis -m cmd : cmd(s(3));		
		delay 1000;
		println("raIntegrator sending cmd : cmd(h(3)) to applra");
		sendto applra in ctxReqAnalysis -m cmd : cmd(h(3));
		
		println("raIntegrator end")
	]
}
