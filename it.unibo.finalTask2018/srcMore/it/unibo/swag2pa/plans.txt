plan(1,init, sentence(true,move(print("swag2 start: waiting for start command")),'','' ))
plan(1,receivedCmd, sentence(true,msgswitch(swagmsg, usercmd( start) , not here StateMoveNormal),'','' ))
plan(2,receivedCmd, sentence(true,msgswitch(swagmsg, usercmd( halt) , move(print("ricevuto usercmd(halt)"))),'','' ))
plan(1,detectedBySonar, sentence(true,move(print("detected by a sonar")),'','' ))
plan(2,detectedBySonar, sentence(true,eventswitch(sonarSensor, »sonar( sonar1,D), addRule( sonarDetect( sonar1,D) ) ),'','' ))
plan(3,detectedBySonar, sentence( isCloseTo( sonar1),not here StateMoveNormal,'','' ))
plan(4,detectedBySonar, sentence(true,removeRule( sonarDetect( sonar1,D) ),'','' ))
plan(1,cleaning, sentence(true,move(print("cleaning")),'','' ))
plan(1,detectedByFinal, sentence(true,move(print("detected by a sonar")),'','' ))
plan(2,detectedByFinal, sentence(true,eventswitch(sonarSensor, »sonar( sonar2,D), addRule( sonarDetect( sonar2,D) ) ),'','' ))
plan(3,detectedByFinal, sentence( isCloseTo( sonar2),not here StateMoveNormal,'','' ))
plan(4,detectedByFinal, sentence(true,removeRule( sonarDetect( sonar2,D) ),'','' ))
plan(1,handleFront, sentence(true,move(print("handleFront")),'','' ))
plan(2,handleFront, sentence(true,printCurrentEvent(false),'','' ))
plan(3,handleFront, sentence(true,eventswitch(frontSonar, »sonar( D), move(solve,obstacleDetected( D),0,"") ),'','' ))
plan(4,handleFront, sentence( isFixObstacle,move(print("fix obstacle")),'','' ))
plan(5,handleFront, sentence(true,move(resumeplan),'','' ))
plan(1,avoidFix, sentence(true,move(print("avoidFix")),'','' ))
plan(2,avoidFix, sentence(true,removeRule( foundObstacle( X) ),'','' ))
plan(3,avoidFix, sentence(true,move(solve,avoidFixTry,0,""),'','' ))
plan(4,avoidFix, sentence( avoidFixGiveUp,notHere SendDispatch,'','' ))
plan(1,givingUp, sentence(true,move(print("givingUp")),'','' ))
plan(2,givingUp, sentence(true,removeRule( foundFix( X) ),'','' ))
plan(1,avoidMobile, sentence(true,move(print("avoidMobile")),'','' ))
plan(2,avoidMobile, sentence(true,removeRule( foundObstacle( X) ),'','' ))
plan(3,avoidMobile, sentence(true,move(print("ok, ostacolo superato")),'','' ))
plan(1,checkDoor, sentence(true,move(print("checkDoor")),'','' ))
plan(2,checkDoor, sentence(true,move(print("stop")),'','' ))
plan(3,checkDoor, sentence(true,move(print("turn left")),'','' ))
plan(1,doorFound, sentence(true,move(print("doorFound")),'','' ))
plan(2,doorFound, sentence(true,removeRule( foundFix( X) ),'','' ))
plan(3,doorFound, sentence(true,move(print("forward")),'','' ))
plan(4,doorFound, sentence(true,delay( 400) ,'','' ))
plan(5,doorFound, sentence(true,move(print("stop")),'','' ))
plan(1,goToPrevLevel, sentence(true,move(print("goToPrevLevel")),'','' ))
plan(1,failure, sentence(true,move(print("failure")),'','' ))
plan(2,failure, sentence(true,removeRule( foundFix( X) ),'','' ))
plan(3,failure, sentence(true,move(print("stop")),'','' ))
plan(4,failure, sentence(true,move(print("prova a sinistra")),'','' ))
