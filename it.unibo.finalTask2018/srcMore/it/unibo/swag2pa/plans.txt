plan(1,init, sentence(true,move(print("swag2 start: waiting for start command")),'','' ))
plan(1,receivedCmd, sentence(true,msgswitch(externalcmd, usercmd( start) , not here StateMoveNormal),'','' ))
plan(2,receivedCmd, sentence(true,msgswitch(externalcmd, usercmd( halt) , move(print("ricevuto halt"))),'','' ))
plan(1,detectedBySonar, sentence(true,move(print("detected by a sonar")),'','' ))
plan(2,detectedBySonar, sentence(true,eventswitch(sonarSensor, »sonar( sonar1,D), addRule( sonarDetect( sonar1,D) ) ),'','' ))
plan(3,detectedBySonar, sentence( isCloseTo( sonar1),not here StateMoveNormal,'','' ))
plan(4,detectedBySonar, sentence(true,removeRule( sonarDetect( sonar1,D) ),'','' ))
plan(1,cleaning, sentence(true,move(print("cleaning")),'','' ))
plan(1,detectedByFinal, sentence(true,move(print("detected by a sonar")),'','' ))
plan(2,detectedByFinal, sentence(true,eventswitch(sonarSensor, »sonar( sonar2,D), addRule( sonarDetect( sonar2,D) ) ),'','' ))
plan(3,detectedByFinal, sentence( isCloseTo( sonar2),not here StateMoveNormal,'','' ))
plan(4,detectedByFinal, sentence(true,removeRule( sonarDetect( sonar2,D) ),'','' ))
plan(1,handleFront, sentence(true,move(print("handleFront")),'','' ))
plan(2,handleFront, sentence(true,move(print("possible mobile obstacle")),'','' ))
plan(3,handleFront, sentence(true,delay( 1000) ,'','' ))
plan(4,handleFront, sentence(true,move(print("provo ad avanzare")),'','' ))
plan(5,handleFront, sentence(true,move(resumeplan),'','' ))
plan(1,avoidMobile, sentence(true,move(print("avoidMobile")),'','' ))
plan(2,avoidMobile, sentence(true,removeRule( foundObstacle( X) ),'','' ))
plan(3,avoidMobile, sentence(true,move(print("ok, ostacolo superato")),'','' ))
plan(1,avoidFixRight, sentence(true,move(print("avoidFixRight")),'','' ))
plan(2,avoidFixRight, sentence(true,move(solve,avoidFixTry,0,""),'','' ))
plan(3,avoidFixRight, sentence( avoidFixGiveUp,not here StateMoveNormal,'','' ))
plan(1,checkDoorRight, sentence(true,move(print("checkDoor")),'','' ))
plan(2,checkDoorRight, sentence(true,move(print("stop")),'','' ))
plan(3,checkDoorRight, sentence(true,move(print("turn left")),'','' ))
plan(1,doorFoundRight, sentence(true,move(print("doorFoundRight")),'','' ))
plan(2,doorFoundRight, sentence(true,move(print("forward")),'','' ))
plan(3,doorFoundRight, sentence(true,move(print("stop")),'','' ))
plan(4,doorFoundRight, sentence(true,move(print("left")),'','' ))
plan(1,goToPrevLevelRight, sentence(true,move(print("goToPrevLevelRight")),'','' ))
plan(2,goToPrevLevelRight, sentence( foundFix( C),not here StateMoveNormal,'','' ))
plan(1,resumeLastPosition, sentence(true,move(print("resume last position")),'','' ))
plan(2,resumeLastPosition, sentence( foundFix( C),not here StateMoveNormal,'','' ))
plan(1,avoidFixLeft, sentence(true,move(print("avoidFixLeft")),'','' ))
plan(2,avoidFixLeft, sentence(true,move(solve,avoidFixTry,0,""),'','' ))
plan(3,avoidFixLeft, sentence( avoidFixGiveUp,notHere SendDispatch,'','' ))
plan(1,checkDoorLeft, sentence(true,move(print("checkDoorLeft")),'','' ))
plan(2,checkDoorLeft, sentence(true,move(print("stop")),'','' ))
plan(3,checkDoorLeft, sentence(true,move(print("turn right")),'','' ))
plan(1,doorFoundLeft, sentence(true,move(print("doorFoundLeft")),'','' ))
plan(2,doorFoundLeft, sentence(true,move(print("forward")),'','' ))
plan(3,doorFoundLeft, sentence(true,delay( 500) ,'','' ))
plan(4,doorFoundLeft, sentence(true,move(print("stop")),'','' ))
plan(5,doorFoundLeft, sentence(true,move(print("right")),'','' ))
plan(1,goToPrevLevelLeft, sentence(true,move(print("goToPrevLevelLeft")),'','' ))
plan(2,goToPrevLevelLeft, sentence( foundFix( C),not here StateMoveNormal,'','' ))
plan(1,failure, sentence(true,move(print("failure")),'','' ))
plan(2,failure, sentence(true,move(print("ruoto di 180")),'','' ))
plan(1,switchDirection, sentence(true,move(print("switchDirection")),'','' ))
plan(2,switchDirection, sentence(true,move(solve,decremFoundFix,0,""),'','' ))
plan(3,switchDirection, sentence(true,move(print("ruoto di 90")),'','' ))
plan(1,givingUp, sentence(true,move(print("givingUp")),'','' ))
plan(2,givingUp, sentence(true,removeRule( foundFix( X) ),'','' ))
